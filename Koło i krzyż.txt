#include <iostream> 
#include <vector>
#include <limits>
using namespace std;

void printBoard(const vector<char>& board) {
    cout << "\n";
    cout << " " << board[6] << " | " << board[7] << " | " << board[8] << "\n";
    cout << "---+---+---\n";
    cout << " " << board[3] << " | " << board[4] << " | " << board[5] << "\n";
    cout << "---+---+---\n";
    cout << " " << board[0] << " | " << board[1] << " | " << board[2] << "\n\n";
}

void displayInitialBoard() {
    cout << "\n";
    cout << "\n";
    cout << "Witaj w grze Kółko i Krzyżyk!\n";
    cout << "Gracze na zmianę wybierają pole, podając numer od 1 do 9.\n";
    cout << "Celem jest ułożenie trzech znaków w linii: poziomo, pionowo lub ukośnie.\n\n";
    cout << "Oto dostępne ruchy:\n\n";
    cout << " 7 | 8 | 9 \n";
    cout << "---+---+---\n";
    cout << " 4 | 5 | 6 \n";
    cout << "---+---+---\n";
    cout << " 1 | 2 | 3 \n\n";
}

bool isWinner(const vector<char>& board, char player) {
    const vector<vector<int>> winCombos = {
        {0, 1, 2}, {3, 4, 5}, {6, 7, 8},
        {0, 3, 6}, {1, 4, 7}, {2, 5, 8},
        {0, 4, 8}, {2, 4, 6}
    };
    for (const auto& combo : winCombos) {
        if (board[combo[0]] == player && board[combo[1]] == player && board[combo[2]] == player) {
            return true;
        }
    }
    return false;
}

bool isDraw(const vector<char>& board) {
    for (char cell : board) {
        if (cell == ' ') return false;
    }
    return true;
}

int main() {
    while (true) {
        vector<char> board(9, ' '); 
        char currentPlayer = 'X';

        displayInitialBoard();
        
        while (true) {
            printBoard(board);
            int move;
            
            cout << "Gracz " << currentPlayer << ", wybierz pole (1-9): ";
            cin >> move;

            if (cin.fail() || move < 1 || move > 9 || board[move - 1] != ' ') {
                cin.clear();
                cin.ignore(numeric_limits<streamsize>::max(), '\n');
                cout << "Nieprawidłowy ruch. Wybierz ponownie.\n";
                continue;
            }

            board[move - 1] = currentPlayer;

            if (isWinner(board, currentPlayer)) {
                printBoard(board);
                cout << "Gracz " << currentPlayer << " wygrywa!\n";
                break;
            }

            if (isDraw(board)) {
                printBoard(board);
                cout << "Remis!\n";
                break;
            }

            currentPlayer = (currentPlayer == 'X') ? 'Y' : 'X';
        }

        char replay;
        do {
            cout << "Czy chcesz zagrać ponownie? (t/n): ";
            cin >> replay;
            replay = tolower(replay);  
            
            if (replay != 't' && replay != 'n') {
                cout << "Nieprawidłowy wybór. Wpisz 't' aby zagrać ponownie lub 'n' zakończyć program.\n";
            }
        } while (replay != 't' && replay != 'n');  

        if (replay == 'n') break;  
    } 
    return 0; 
}